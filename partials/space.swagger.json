{
  "swagger": "2.0",
  "info": {
    "title": "space.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "SpaceService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/developer/door_groups": {
      "get": {
        "summary": "7.5 Fetch All Door Groups",
        "operationId": "SpaceService_FetchAllDoorGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/spaceResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "SpaceService"
        ]
      },
      "post": {
        "summary": "7.2 Create Door Group",
        "operationId": "SpaceService_CreateDoorGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/spaceResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/spaceCreateDoorGroupRequest"
            }
          }
        ],
        "tags": [
          "SpaceService"
        ]
      }
    },
    "/api/v1/developer/door_groups/topology": {
      "get": {
        "summary": "7.1 Fetch Door Group Topology",
        "operationId": "SpaceService_FetchDoorGroupTopology",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/spaceResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body.id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "body.type",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SpaceService"
        ]
      }
    },
    "/api/v1/developer/door_groups/{id}": {
      "get": {
        "summary": "7.3 Fetch Door Group",
        "operationId": "SpaceService_FetchDoorGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/spaceResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "path.id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SpaceService"
        ]
      },
      "delete": {
        "summary": "7.6 Delete Door Group",
        "operationId": "SpaceService_DeleteDoorGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/spaceResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "path.id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SpaceService"
        ]
      },
      "put": {
        "summary": "7.4 Update Door Group",
        "operationId": "SpaceService_UpdateDoorGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/spaceResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SpaceServiceUpdateDoorGroupBody"
            }
          }
        ],
        "tags": [
          "SpaceService"
        ]
      }
    },
    "/api/v1/developer/doors": {
      "get": {
        "summary": "7.8 Fetch All Doors",
        "operationId": "SpaceService_FetchAllDoors",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/spaceDoorsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "SpaceService"
        ]
      }
    },
    "/api/v1/developer/doors/settings/emergency": {
      "get": {
        "summary": "7.13 Fetch Door Emergency Status",
        "operationId": "SpaceService_FetchDoorEmergencyStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/spaceDoorEmergencyStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body.lockdown",
            "description": "True will keep the door locked",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "body.evacuation",
            "description": "True will keep the door unlocked.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "SpaceService"
        ]
      },
      "put": {
        "summary": "7.12 Set Door Emergency Status",
        "operationId": "SpaceService_SetDoorEmergencyStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/spaceDoorStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/spaceSetDoorEmergencyStatusRequest"
            }
          }
        ],
        "tags": [
          "SpaceService"
        ]
      }
    },
    "/api/v1/developer/doors/{id}": {
      "get": {
        "summary": "7.7 Fetch Door",
        "operationId": "SpaceService_FetchDoor",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/spaceDoorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "path.id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SpaceService"
        ]
      }
    },
    "/api/v1/developer/doors/{id}/lock_rule": {
      "get": {
        "summary": "7.11 Fetch Door Locking Rule",
        "operationId": "SpaceService_FetchDoorLockingRule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/spaceDoorLockingRuleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "path.id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "body.type",
            "description": "enum type {schedule,keep_lock,keep_unlock,custom,lock_early} keep_lock is\nused to set the \"keep locked\" state, while keep_unlock is used to set the\n\"keep unlocked\" state. custom is used to customize the unlock time\nduration. schedule indicates that the door is currently in the unlock\nschedule state. The lock_early is used to terminate doors in an unlock\nschedule early.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "body.endedTime",
            "description": "End time of the set rule, ex: 1708672257",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "SpaceService"
        ]
      },
      "put": {
        "summary": "7.10 Set Temporary Door Locking Rule",
        "operationId": "SpaceService_SetTemporaryDoorLockingRule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/spaceDoorStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SpaceServiceSetTemporaryDoorLockingRuleBody"
            }
          }
        ],
        "tags": [
          "SpaceService"
        ]
      }
    },
    "/api/v1/developer/doors/{id}/unlock": {
      "put": {
        "summary": "7.9 Remote Door Unlocking",
        "operationId": "SpaceService_RemoteDoorUnlocking",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/spaceDoorStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SpaceServiceRemoteDoorUnlockingBody"
            }
          }
        ],
        "tags": [
          "SpaceService"
        ]
      }
    }
  },
  "definitions": {
    "SpaceServiceRemoteDoorUnlockingBody": {
      "type": "object",
      "properties": {
        "path": {
          "$ref": "#/definitions/spaceRemoteDoorUnlockingRequestPath"
        },
        "params": {
          "$ref": "#/definitions/spaceRemoteDoorUnlockingRequestParams"
        },
        "body": {
          "$ref": "#/definitions/spaceRemoteDoorUnlockingRequestBody"
        }
      }
    },
    "SpaceServiceSetTemporaryDoorLockingRuleBody": {
      "type": "object",
      "properties": {
        "path": {
          "$ref": "#/definitions/spaceSetTemporaryDoorLockingRuleRequestPath"
        },
        "params": {
          "$ref": "#/definitions/spaceSetTemporaryDoorLockingRuleRequestParams"
        },
        "body": {
          "$ref": "#/definitions/spaceSetTemporaryDoorLockingRuleRequestBody"
        }
      }
    },
    "SpaceServiceUpdateDoorGroupBody": {
      "type": "object",
      "properties": {
        "path": {
          "$ref": "#/definitions/spaceUpdateDoorGroupRequestPath"
        },
        "params": {
          "$ref": "#/definitions/spaceUpdateDoorGroupRequestParams"
        },
        "body": {
          "$ref": "#/definitions/spaceUpdateDoorGroupRequestBody"
        }
      }
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\nExample 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\nExample 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "spaceCreateDoorGroupRequest": {
      "type": "object",
      "properties": {
        "path": {
          "$ref": "#/definitions/spaceCreateDoorGroupRequestPath"
        },
        "params": {
          "$ref": "#/definitions/spaceCreateDoorGroupRequestParams"
        },
        "body": {
          "$ref": "#/definitions/spaceCreateDoorGroupRequestBody"
        }
      }
    },
    "spaceCreateDoorGroupRequestBody": {
      "type": "object",
      "properties": {
        "groupName": {
          "type": "string",
          "title": "Name of the door group. This needs to be globally unique"
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/spaceResource"
          },
          "title": "Collection of door ID"
        }
      }
    },
    "spaceCreateDoorGroupRequestParams": {
      "type": "object"
    },
    "spaceCreateDoorGroupRequestPath": {
      "type": "object",
      "title": "7.2 - POST - Create Door Group"
    },
    "spaceDeleteDoorGroupRequestBody": {
      "type": "object"
    },
    "spaceDeleteDoorGroupRequestParams": {
      "type": "object"
    },
    "spaceDeleteDoorGroupRequestPath": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "title": "7.6 - DELETE - Delete Door Group"
    },
    "spaceDoor": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Identity ID of the door group"
        },
        "name": {
          "type": "string",
          "title": "Name of the door"
        },
        "fullName": {
          "type": "string",
          "title": "Full name of the door"
        },
        "floorId": {
          "type": "string",
          "title": "Identity ID of the floor"
        },
        "type": {
          "type": "string",
          "title": "Type of the door"
        },
        "isBindHub": {
          "type": "string",
          "title": "Indicate whether the door has bound to a hub device. It can only be"
        },
        "doorLockRelayStatus": {
          "type": "string",
          "description": "used for remote opening if it's bound.\n\nDoor lock status. enum door_lock_relay_status {lock,unlock}"
        },
        "doorPositionStatus": {
          "type": "string",
          "title": "DPS: Door position status, including both open and close . A null"
        }
      }
    },
    "spaceDoorEmergencyStatus": {
      "type": "object",
      "properties": {
        "evacuation": {
          "type": "boolean"
        },
        "lockdown": {
          "type": "boolean"
        }
      }
    },
    "spaceDoorEmergencyStatusResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/spaceDoorEmergencyStatus"
        },
        "msg": {
          "type": "string"
        }
      }
    },
    "spaceDoorLockingRule": {
      "type": "object",
      "properties": {
        "endedTime": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "spaceDoorLockingRuleResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/spaceDoorLockingRule"
        },
        "msg": {
          "type": "string"
        }
      }
    },
    "spaceDoorResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/spaceDoor"
        },
        "msg": {
          "type": "string"
        }
      }
    },
    "spaceDoorStatusResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "data": {
          "type": "string"
        },
        "msg": {
          "type": "string"
        }
      }
    },
    "spaceDoorsResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/spaceDoor"
          }
        },
        "msg": {
          "type": "string"
        }
      }
    },
    "spaceFetchAllDoorGroupsRequestBody": {
      "type": "object"
    },
    "spaceFetchAllDoorGroupsRequestParams": {
      "type": "object"
    },
    "spaceFetchAllDoorGroupsRequestPath": {
      "type": "object",
      "title": "7.5 - GET - Fetch All Door Groups"
    },
    "spaceFetchAllDoorsRequestBody": {
      "type": "object"
    },
    "spaceFetchAllDoorsRequestParams": {
      "type": "object"
    },
    "spaceFetchAllDoorsRequestPath": {
      "type": "object",
      "title": "7.8 - GET - Fetch All Doors"
    },
    "spaceFetchDoorEmergencyStatusRequestBody": {
      "type": "object",
      "properties": {
        "lockdown": {
          "type": "boolean",
          "title": "True will keep the door locked"
        },
        "evacuation": {
          "type": "boolean",
          "description": "True will keep the door unlocked."
        }
      }
    },
    "spaceFetchDoorEmergencyStatusRequestParams": {
      "type": "object"
    },
    "spaceFetchDoorEmergencyStatusRequestPath": {
      "type": "object",
      "title": "7.13 - GET - Fetch Door Emergency Status"
    },
    "spaceFetchDoorGroupRequestBody": {
      "type": "object"
    },
    "spaceFetchDoorGroupRequestParams": {
      "type": "object"
    },
    "spaceFetchDoorGroupRequestPath": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "title": "7.3 - GET - Fetch Door Group"
    },
    "spaceFetchDoorGroupTopologyRequestBody": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "resourceTopologies": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/spaceResourceTopology"
          }
        }
      }
    },
    "spaceFetchDoorGroupTopologyRequestParams": {
      "type": "object"
    },
    "spaceFetchDoorGroupTopologyRequestPath": {
      "type": "object",
      "title": "7.1 - GET - Fetch Door Group Topology"
    },
    "spaceFetchDoorLockingRuleRequestBody": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "enum type {schedule,keep_lock,keep_unlock,custom,lock_early} keep_lock is\nused to set the \"keep locked\" state, while keep_unlock is used to set the\n\"keep unlocked\" state. custom is used to customize the unlock time\nduration. schedule indicates that the door is currently in the unlock\nschedule state. The lock_early is used to terminate doors in an unlock\nschedule early."
        },
        "endedTime": {
          "type": "integer",
          "format": "int32",
          "title": "End time of the set rule, ex: 1708672257"
        }
      }
    },
    "spaceFetchDoorLockingRuleRequestParams": {
      "type": "object"
    },
    "spaceFetchDoorLockingRuleRequestPath": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "title": "7.11 - GET - Fetch Door Locking Rule"
    },
    "spaceFetchDoorRequestBody": {
      "type": "object"
    },
    "spaceFetchDoorRequestParams": {
      "type": "object"
    },
    "spaceFetchDoorRequestPath": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "title": "7.7 GET - Fetch Door"
    },
    "spaceRemoteDoorUnlockingRequestBody": {
      "type": "object"
    },
    "spaceRemoteDoorUnlockingRequestParams": {
      "type": "object"
    },
    "spaceRemoteDoorUnlockingRequestPath": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "title": "7.9 - PUT - Remote Door Unlocking"
    },
    "spaceResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Identity ID of the door"
        },
        "name": {
          "type": "string",
          "title": "Name of the door"
        },
        "type": {
          "type": "string",
          "title": "Type of the door"
        },
        "isBindHub": {
          "type": "boolean",
          "description": "Indicate whether the door has bound to a hub device."
        }
      }
    },
    "spaceResourceResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/spaceResourceTopology"
        },
        "msg": {
          "type": "string"
        }
      }
    },
    "spaceResourceTopology": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Identity ID of the floor"
        },
        "type": {
          "type": "string",
          "title": "Type of the floor"
        },
        "name": {
          "type": "string",
          "title": "Name of the floor"
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/spaceResource"
          },
          "description": "Contain all the doors on the floor."
        }
      }
    },
    "spaceResourcesResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/spaceResourceTopology"
          }
        },
        "msg": {
          "type": "string"
        }
      }
    },
    "spaceSetDoorEmergencyStatusRequest": {
      "type": "object",
      "properties": {
        "path": {
          "$ref": "#/definitions/spaceSetDoorEmergencyStatusRequestPath"
        },
        "params": {
          "$ref": "#/definitions/spaceSetDoorEmergencyStatusRequestParams"
        },
        "body": {
          "$ref": "#/definitions/spaceSetDoorEmergencyStatusRequestBody"
        }
      }
    },
    "spaceSetDoorEmergencyStatusRequestBody": {
      "type": "object",
      "properties": {
        "lockdown": {
          "type": "boolean",
          "title": "True will keep the door locked"
        },
        "evacuation": {
          "type": "boolean",
          "description": "True will keep the door unlocked."
        }
      }
    },
    "spaceSetDoorEmergencyStatusRequestParams": {
      "type": "object"
    },
    "spaceSetDoorEmergencyStatusRequestPath": {
      "type": "object",
      "title": "7.12 - PUT - Set Door Emergency Status"
    },
    "spaceSetTemporaryDoorLockingRuleRequestBody": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "enum type {keep_lock,keep_unlock,custom,reset,lock_early} keep_lock is used\nto set the door to the \"keep locked\" state, while keep_unlock is used to\nset it to the \"keep unlocked\" state. custom allows customization of the\nunlock time duration, and reset is used to restore the door to its initial\nstate (not applicable to the \"lock_early\" state). NOTE: If the door is\ncurrently on an unlock schedule ( schedule ), you can use lock_early to\nlock the door early."
        },
        "interval": {
          "type": "integer",
          "format": "int32",
          "title": "Set the lock time duration (minutes) when type is custom, ex: 10"
        }
      }
    },
    "spaceSetTemporaryDoorLockingRuleRequestParams": {
      "type": "object"
    },
    "spaceSetTemporaryDoorLockingRuleRequestPath": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "title": "7.10 - PUT - Set Temporary Door Locking Rule"
    },
    "spaceUpdateDoorGroupRequestBody": {
      "type": "object",
      "properties": {
        "groupName": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/spaceResource"
          }
        }
      }
    },
    "spaceUpdateDoorGroupRequestParams": {
      "type": "object"
    },
    "spaceUpdateDoorGroupRequestPath": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "title": "7.4 - PUT - Update Door Group"
    }
  }
}
