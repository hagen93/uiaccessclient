{
  "swagger": "2.0",
  "info": {
    "title": "visitor.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "VisitorService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/developer/visitors": {
      "get": {
        "summary": "4.4 Fetch all visitors",
        "operationId": "VisitorService_FetchAllVisitors",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/visitorVisitorsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "params.status",
            "description": " - UNKNOWN: Note: This is a placeholder, does not exist on API.\n - UPCOMING: Upcoming visit\n - VISITED: Completed visit\n - VISITING: Currently visiting\n - CANCELLED: Cancelled visit\n - NO_VISIT: No visit occurred\n - ACTIVE: Active visit",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "UPCOMING",
              "VISITED",
              "VISITING",
              "CANCELLED",
              "NO_VISIT",
              "ACTIVE"
            ],
            "default": "UNKNOWN"
          },
          {
            "name": "params.keyword",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "params.pageNum",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "params.pageSize",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "params.expand",
            "description": "Determine whether to return associated objects,",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "VisitorService"
        ]
      },
      "post": {
        "summary": "4.2 Create a new visitor",
        "operationId": "VisitorService_CreateVisitor",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/visitorVisitorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/visitorCreateVisitorRequest"
            }
          }
        ],
        "tags": [
          "VisitorService"
        ]
      }
    },
    "/api/v1/developer/visitors/{id}": {
      "get": {
        "summary": "4.3 Fetch visitor details by ID",
        "operationId": "VisitorService_FetchVisitor",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/visitorVisitorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "path.id",
            "description": "Identify ID of the visitor",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "VisitorService"
        ]
      },
      "delete": {
        "summary": "4.6 Delete a visitor by ID",
        "operationId": "VisitorService_DeleteVisitor",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/visitorVisitorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VisitorServiceDeleteVisitorBody"
            }
          }
        ],
        "tags": [
          "VisitorService"
        ]
      },
      "put": {
        "summary": "4.5 Update a visitor by ID",
        "operationId": "VisitorService_UpdateVisitor",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/visitorVisitorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VisitorServiceUpdateVisitorBody"
            }
          }
        ],
        "tags": [
          "VisitorService"
        ]
      }
    },
    "/api/v1/developer/visitors/{id}/nfc_cards": {
      "put": {
        "summary": "4.7 Assign Visitor NFC Card",
        "operationId": "VisitorService_AssignVisitorNfcCard",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sharedStatusCodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VisitorServiceAssignVisitorNfcCardBody"
            }
          }
        ],
        "tags": [
          "VisitorService"
        ]
      }
    },
    "/api/v1/developer/visitors/{id}/nfc_cards/delete": {
      "put": {
        "summary": "4.8 Unassign Visitor NFC Card",
        "operationId": "VisitorService_UnassignVisitorNfcCard",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sharedStatusCodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VisitorServiceUnassignVisitorNfcCardBody"
            }
          }
        ],
        "tags": [
          "VisitorService"
        ]
      }
    },
    "/api/v1/developer/visitors/{id}/pin_codes": {
      "delete": {
        "summary": "4.10 Unassisgn Visitor Pin Code",
        "operationId": "VisitorService_UnassignVisitorPinCode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sharedStatusCodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "path.id",
            "description": "Identity ID of the visitor.\n Get it from the API, /api/v1/developer/visitors",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "VisitorService"
        ]
      },
      "put": {
        "summary": "4.9 Assign Visitor Pin Code",
        "operationId": "VisitorService_AssignVisitorPinCode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sharedStatusCodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VisitorServiceAssignVisitorPinCodeBody"
            }
          }
        ],
        "tags": [
          "VisitorService"
        ]
      }
    }
  },
  "definitions": {
    "VisitorServiceAssignVisitorNfcCardBody": {
      "type": "object",
      "properties": {
        "path": {
          "$ref": "#/definitions/visitorAssignVisitorNfcCardRequestPath"
        },
        "params": {
          "$ref": "#/definitions/visitorAssignVisitorNfcCardRequestParams"
        },
        "body": {
          "$ref": "#/definitions/visitorAssignVisitorNfcCardRequestBody"
        }
      }
    },
    "VisitorServiceAssignVisitorPinCodeBody": {
      "type": "object",
      "properties": {
        "path": {
          "$ref": "#/definitions/visitorAssignVisitorPinCodeRequestPath"
        },
        "params": {
          "$ref": "#/definitions/visitorAssignVisitorPinCodeRequestParams"
        },
        "body": {
          "$ref": "#/definitions/visitorAssignVisitorPinCodeRequestBody"
        }
      }
    },
    "VisitorServiceDeleteVisitorBody": {
      "type": "object",
      "properties": {
        "path": {
          "$ref": "#/definitions/visitorDeleteVisitorRequestPath"
        },
        "params": {
          "$ref": "#/definitions/visitorDeleteVisitorRequestParams"
        },
        "body": {
          "$ref": "#/definitions/visitorDeleteVisitorRequestBody"
        }
      }
    },
    "VisitorServiceUnassignVisitorNfcCardBody": {
      "type": "object",
      "properties": {
        "path": {
          "$ref": "#/definitions/visitorUnassignVisitorNfcCardRequestPath"
        },
        "params": {
          "$ref": "#/definitions/visitorUnassignVisitorNfcCardRequestParams"
        },
        "body": {
          "$ref": "#/definitions/visitorUnassignVisitorNfcCardRequestBody"
        }
      }
    },
    "VisitorServiceUpdateVisitorBody": {
      "type": "object",
      "properties": {
        "path": {
          "$ref": "#/definitions/visitorUpdateVisitorRequestPath"
        },
        "params": {
          "$ref": "#/definitions/visitorUpdateVisitorRequestParams"
        },
        "body": {
          "$ref": "#/definitions/visitorUpdateVisitorRequestBody"
        }
      }
    },
    "access_policyDaySchedule": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "title": "Start time of the access period"
        },
        "endTime": {
          "type": "string",
          "title": "End time of the access period"
        }
      }
    },
    "access_policyHolidaySchedule": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "int64"
        },
        "endTime": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "access_policySchedule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Schedule ID"
        },
        "name": {
          "type": "string",
          "title": "Name of the schedule"
        },
        "isDefault": {
          "type": "boolean",
          "title": "Whether system default"
        },
        "type": {
          "type": "string",
          "title": "Type of the schedule (e.g., access)"
        },
        "weekly": {
          "$ref": "#/definitions/access_policyWeekSchedule",
          "description": "Customizable daily scheduling, or every day if empty."
        },
        "holidaySchedule": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/access_policyHolidaySchedule"
          },
          "description": "Specify the accessible period during holidays."
        },
        "holidayGroupId": {
          "type": "string",
          "title": "Identity ID of the holiday group"
        }
      }
    },
    "access_policyWeekSchedule": {
      "type": "object",
      "properties": {
        "sunday": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/access_policyDaySchedule"
          },
          "title": "Schedule for Sunday"
        },
        "monday": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/access_policyDaySchedule"
          },
          "title": "Schedule for Monday"
        },
        "tuesday": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/access_policyDaySchedule"
          },
          "title": "Schedule for Tuesday"
        },
        "wednesday": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/access_policyDaySchedule"
          },
          "title": "Schedule for Wednesday"
        },
        "thursday": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/access_policyDaySchedule"
          },
          "title": "Schedule for Thursday"
        },
        "friday": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/access_policyDaySchedule"
          },
          "title": "Schedule for Friday"
        },
        "saturday": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/access_policyDaySchedule"
          },
          "title": "Schedule for Saturday"
        }
      }
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\nExample 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\nExample 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "sharedNFC_Card": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "sharedPIN_Code": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "sharedResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID of the door group"
        },
        "name": {
          "type": "string",
          "title": "Name of the door group"
        },
        "type": {
          "type": "string",
          "title": "Type of the door group"
        }
      }
    },
    "sharedStatusCodeResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "msg": {
          "type": "string"
        }
      },
      "title": "2.3 Success Code, 2.4 Error Code"
    },
    "visitorAssignVisitorNfcCardRequestBody": {
      "type": "object"
    },
    "visitorAssignVisitorNfcCardRequestParams": {
      "type": "object"
    },
    "visitorAssignVisitorNfcCardRequestPath": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Identity ID of the visitor.\n Get it from the API, /api/v1/developer/visitors"
        }
      },
      "title": "4.7 - PUT - Assign NFC Card to Visitor"
    },
    "visitorAssignVisitorPinCodeRequestBody": {
      "type": "object",
      "properties": {
        "pinCode": {
          "type": "string",
          "title": "Generate a PIN code for the visitor to unlock doors.\n Get it from the API, /api/v1/developer/pin_codes"
        }
      }
    },
    "visitorAssignVisitorPinCodeRequestParams": {
      "type": "object"
    },
    "visitorAssignVisitorPinCodeRequestPath": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Identity ID of the visitor.\n Get it from the API, /api/v1/developer/visitors"
        }
      },
      "title": "4.9 - PUT - Assign PIN Code to Visitor"
    },
    "visitorCreateVisitorRequest": {
      "type": "object",
      "properties": {
        "path": {
          "$ref": "#/definitions/visitorCreateVisitorRequestPath"
        },
        "params": {
          "$ref": "#/definitions/visitorCreateVisitorRequestParams"
        },
        "body": {
          "$ref": "#/definitions/visitorCreateVisitorRequestBody"
        }
      }
    },
    "visitorCreateVisitorRequestBody": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "title": "First name of the visitors"
        },
        "lastName": {
          "type": "string",
          "title": "Last name of the visitor"
        },
        "remarks": {
          "type": "string",
          "title": "Remarks about the visitor"
        },
        "mobilePhone": {
          "type": "string",
          "title": "Mobile phone number of the visitor"
        },
        "email": {
          "type": "string",
          "title": "Email address of the visitor"
        },
        "visitorCompany": {
          "type": "string",
          "title": "Company name of the visitor"
        },
        "startTime": {
          "type": "string",
          "format": "int64",
          "title": "Start time of the visit, ex: 1688546460"
        },
        "endTime": {
          "type": "string",
          "format": "int64",
          "title": "End time of the visit, ex: 1688572799"
        },
        "visitReason": {
          "type": "string",
          "description": "Visit reason, see VisitReason enum."
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/sharedResource"
          }
        },
        "weekSchedule": {
          "$ref": "#/definitions/access_policyWeekSchedule",
          "description": "Assign available locations to the visitor.\n\nThe customizable scheduling strategy for each day from Sunday to Saturday.\n If not specified, it means access is allowed every day"
        }
      }
    },
    "visitorCreateVisitorRequestParams": {
      "type": "object"
    },
    "visitorCreateVisitorRequestPath": {
      "type": "object",
      "title": "4.2 - POST - Create Visitor"
    },
    "visitorDeleteVisitorRequestBody": {
      "type": "object"
    },
    "visitorDeleteVisitorRequestParams": {
      "type": "object",
      "properties": {
        "isForce": {
          "type": "boolean",
          "description": "If is_force is passed, physicall delete this visitor; otherwise, update to\n canceled status."
        }
      }
    },
    "visitorDeleteVisitorRequestPath": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "title": "4.6 - DELETE - Delete Visitor"
    },
    "visitorFetchAllVisitorsRequestBody": {
      "type": "object"
    },
    "visitorFetchAllVisitorsRequestParams": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/visitorStatus"
        },
        "keyword": {
          "type": "string"
        },
        "pageNum": {
          "type": "string"
        },
        "pageSize": {
          "type": "string"
        },
        "expand": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Determine whether to return associated objects,"
        }
      }
    },
    "visitorFetchAllVisitorsRequestPath": {
      "type": "object",
      "title": "4.4 - GET - Fetch All Visitors"
    },
    "visitorFetchVisitorRequestBody": {
      "type": "object"
    },
    "visitorFetchVisitorRequestParams": {
      "type": "object"
    },
    "visitorFetchVisitorRequestPath": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Identify ID of the visitor"
        }
      },
      "title": "4.3 - GET - Fetch Visitor"
    },
    "visitorStatus": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "UPCOMING",
        "VISITED",
        "VISITING",
        "CANCELLED",
        "NO_VISIT",
        "ACTIVE"
      ],
      "default": "UNKNOWN",
      "title": "- UNKNOWN: Note: This is a placeholder, does not exist on API.\n - UPCOMING: Upcoming visit\n - VISITED: Completed visit\n - VISITING: Currently visiting\n - CANCELLED: Cancelled visit\n - NO_VISIT: No visit occurred\n - ACTIVE: Active visit"
    },
    "visitorUnassignVisitorNfcCardRequestBody": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "description": "Token of the NFC Card."
        }
      }
    },
    "visitorUnassignVisitorNfcCardRequestParams": {
      "type": "object"
    },
    "visitorUnassignVisitorNfcCardRequestPath": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Identity ID of the visitor.\n Get it from the API, /api/v1/developer/visitors"
        }
      },
      "title": "4.8 - PUT - Unassign NFC Card from Visitor"
    },
    "visitorUnassignVisitorPinCodeRequestBody": {
      "type": "object"
    },
    "visitorUnassignVisitorPinCodeRequestParams": {
      "type": "object"
    },
    "visitorUnassignVisitorPinCodeRequestPath": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Identity ID of the visitor.\n Get it from the API, /api/v1/developer/visitors"
        }
      },
      "title": "4.10 - DELETE - Unassign PIN Code from Visitor"
    },
    "visitorUpdateVisitorRequestBody": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "description": "First name of the visitor."
        },
        "lastName": {
          "type": "string",
          "description": "Last name of the visitor."
        },
        "remarks": {
          "type": "string",
          "description": "Remarks about the visitor."
        },
        "mobilePhone": {
          "type": "string",
          "description": "Mobile phone number of the visitor."
        },
        "email": {
          "type": "string",
          "description": "Email address of the visitor."
        },
        "visitorCompany": {
          "type": "string",
          "description": "Company name of the visitor."
        },
        "startTime": {
          "type": "integer",
          "format": "int32",
          "description": "Start time of the visit."
        },
        "endTime": {
          "type": "integer",
          "format": "int32",
          "title": "End time of the visit,"
        },
        "visitReason": {
          "type": "string",
          "description": "Visit reason, see VisitReason enum."
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/sharedResource"
          }
        },
        "weekSchedule": {
          "$ref": "#/definitions/access_policyWeekSchedule"
        }
      }
    },
    "visitorUpdateVisitorRequestParams": {
      "type": "object"
    },
    "visitorUpdateVisitorRequestPath": {
      "type": "object",
      "title": "4.5 - PUT - Update Visitor"
    },
    "visitorVisitor": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Unique ID of the visitor"
        },
        "firstName": {
          "type": "string",
          "title": "First name of the visitor"
        },
        "lastName": {
          "type": "string",
          "title": "Last name of the visitor"
        },
        "status": {
          "$ref": "#/definitions/visitorStatus",
          "title": "Status of the visit"
        },
        "inviterId": {
          "type": "string",
          "title": "ID of the inviter"
        },
        "inviterName": {
          "type": "string",
          "title": "Name of the inviter"
        },
        "mobilePhone": {
          "type": "string",
          "title": "Contact phone number of the visitor"
        },
        "remarks": {
          "type": "string",
          "title": "Remarks about the visitor"
        },
        "email": {
          "type": "string",
          "title": "Email address of the visitor"
        },
        "visitorCompany": {
          "type": "string",
          "title": "Company of the visitor"
        },
        "visitReason": {
          "type": "string",
          "title": "Visit reason (e.g., Interview, Business)"
        },
        "startTime": {
          "type": "string",
          "format": "int64",
          "title": "Start time of the visit"
        },
        "endTime": {
          "type": "string",
          "format": "int64",
          "title": "End time of the visit"
        },
        "nfcCards": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/sharedNFC_Card"
          },
          "title": "NFC cards associated with the visitor"
        },
        "pinCode": {
          "$ref": "#/definitions/sharedPIN_Code",
          "title": "PIN code associated with the visitor"
        },
        "scheduleId": {
          "type": "string",
          "title": "Schedule ID associated with the visit"
        },
        "schedule": {
          "$ref": "#/definitions/access_policySchedule",
          "description": "Schedule details. One-time visit if missing."
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/sharedResource"
          },
          "title": "Locations that the visitor can access"
        }
      }
    },
    "visitorVisitorResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "msg": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/visitorVisitor"
        }
      }
    },
    "visitorVisitorsResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "msg": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/visitorVisitor"
          }
        }
      }
    }
  }
}
